// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sneakers_api_.net.data;

#nullable disable

namespace sneakersapi.net.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("sneakers_api_.net.models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Sneakerid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Sneakerid");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("sneakers_api_.net.models.ImageUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Sneakerid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Sneakerid");

                    b.ToTable("ImageUrl");
                });

            modelBuilder.Entity("sneakers_api_.net.models.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Sneakerid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Sneakerid");

                    b.ToTable("Size");
                });

            modelBuilder.Entity("sneakers_api_.net.models.Sneaker", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("price")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Sneakers");
                });

            modelBuilder.Entity("sneakers_api_.net.models.Color", b =>
                {
                    b.HasOne("sneakers_api_.net.models.Sneaker", null)
                        .WithMany("colors")
                        .HasForeignKey("Sneakerid");
                });

            modelBuilder.Entity("sneakers_api_.net.models.ImageUrl", b =>
                {
                    b.HasOne("sneakers_api_.net.models.Sneaker", null)
                        .WithMany("images_urls")
                        .HasForeignKey("Sneakerid");
                });

            modelBuilder.Entity("sneakers_api_.net.models.Size", b =>
                {
                    b.HasOne("sneakers_api_.net.models.Sneaker", null)
                        .WithMany("sizes")
                        .HasForeignKey("Sneakerid");
                });

            modelBuilder.Entity("sneakers_api_.net.models.Sneaker", b =>
                {
                    b.Navigation("colors");

                    b.Navigation("images_urls");

                    b.Navigation("sizes");
                });
#pragma warning restore 612, 618
        }
    }
}
